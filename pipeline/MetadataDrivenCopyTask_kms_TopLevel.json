{
	"name": "MetadataDrivenCopyTask_kms_TopLevel",
	"properties": {
		"description": "This pipeline will count the total number of objects (tables etc.) required to be copied in this run, come up with the number of sequential batches based on the max allowed concurrent copy task, and then execute another pipeline to copy different batches sequentially.",
		"activities": [
			{
				"name": "GetSumOfObjectsToCopy",
				"description": "Count the total number of objects (tables etc.) required to be copied in this run.",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "If Condition1",
						"dependencyConditions": [
							"Completed"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SqlServerSource",
						"sqlReaderQuery": {
							"value": "SELECT count(*) as count FROM @{pipeline().parameters.MainControlTableName} where TopLevelPipelineName='@{pipeline().Pipeline}' and TriggerName like '%@{pipeline().TriggerName}%' and CopyEnabled = 1",
							"type": "Expression"
						},
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "MetadataDrivenCopyTask_kms_ControlDS",
						"type": "DatasetReference"
					}
				}
			},
			{
				"name": "CopyBatchesOfObjectsSequentially",
				"description": "Come up with the number of sequential batches based on the max allowed concurrent copy tasks, and then execute another pipeline to copy different batches sequentially.",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "GetSumOfObjectsToCopy",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@range(0, add(div(activity('GetSumOfObjectsToCopy').output.firstRow.count,\n                    pipeline().parameters.MaxNumberOfConcurrentTasks),\n                    if(equals(mod(activity('GetSumOfObjectsToCopy').output.firstRow.count,\n                    pipeline().parameters.MaxNumberOfConcurrentTasks), 0), 0, 1)))",
						"type": "Expression"
					},
					"isSequential": true,
					"activities": [
						{
							"name": "CopyObjectsInOneBatch",
							"description": "Execute another pipeline to copy one batch of objects. The objects belonging to this batch will be copied parallelly.",
							"type": "ExecutePipeline",
							"dependsOn": [],
							"policy": {
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"pipeline": {
									"referenceName": "MetadataDrivenCopyTask_kms_MiddleLevel",
									"type": "PipelineReference"
								},
								"waitOnCompletion": true,
								"parameters": {
									"MaxNumberOfObjectsReturnedFromLookupActivity": {
										"value": "@pipeline().parameters.MaxNumberOfObjectsReturnedFromLookupActivity",
										"type": "Expression"
									},
									"TopLevelPipelineName": {
										"value": "@{pipeline().Pipeline}",
										"type": "Expression"
									},
									"TriggerName": {
										"value": "@{pipeline().TriggerName}",
										"type": "Expression"
									},
									"CurrentSequentialNumberOfBatch": {
										"value": "@item()",
										"type": "Expression"
									},
									"SumOfObjectsToCopy": {
										"value": "@activity('GetSumOfObjectsToCopy').output.firstRow.count",
										"type": "Expression"
									},
									"SumOfObjectsToCopyForCurrentBatch": {
										"value": "@min(pipeline().parameters.MaxNumberOfConcurrentTasks, activity('GetSumOfObjectsToCopy').output.firstRow.count)",
										"type": "Expression"
									},
									"MainControlTableName": {
										"value": "@pipeline().parameters.MainControlTableName",
										"type": "Expression"
									}
								}
							}
						}
					]
				}
			},
			{
				"name": "Lookup1",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SqlServerSource",
						"sqlReaderQuery": {
							"value": "Select Id, pipeline_run_id, status, Start_datetime from \n[dbo].[JobMainControlTable]\norder by Start_datetime desc",
							"type": "Expression"
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "MetadataDrivenCopyTask_kms_DestinationDS",
						"type": "DatasetReference",
						"parameters": {
							"cw_schema": "dbo",
							"cw_table": "JobMainControlTable"
						}
					},
					"firstRowOnly": true
				}
			},
			{
				"name": "If Condition1",
				"type": "IfCondition",
				"dependsOn": [
					{
						"activity": "Lookup1",
						"dependencyConditions": [
							"Completed"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@equals(activity('Lookup1').output.firstRow.status,1)",
						"type": "Expression"
					},
					"ifTrueActivities": [
						{
							"name": "var_set_pipeline_id",
							"type": "SetVariable",
							"dependsOn": [],
							"policy": {
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"variableName": "pipeline_run_id",
								"value": {
									"value": "@activity('Lookup1').output.firstRow.pipeline_run_id",
									"type": "Expression"
								}
							}
						},
						{
							"name": "var_set_status",
							"type": "SetVariable",
							"dependsOn": [],
							"policy": {
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"variableName": "status",
								"value": {
									"value": "@activity('Lookup1').output.firstRow.status",
									"type": "Expression"
								}
							}
						},
						{
							"name": "Script1",
							"type": "Script",
							"dependsOn": [
								{
									"activity": "var_set_status",
									"dependencyConditions": [
										"Succeeded"
									]
								},
								{
									"activity": "var_set_pipeline_id",
									"dependencyConditions": [
										"Succeeded"
									]
								},
								{
									"activity": "var_set_run_id",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"linkedServiceName": {
								"referenceName": "SqlServer2",
								"type": "LinkedServiceReference"
							},
							"typeProperties": {
								"scripts": [
									{
										"type": "Query",
										"text": {
											"value": "@concat('UPDATE dbo.JobMainControlTable SET pipeline_run_id = ' ,  pipeline().RunId , ' WHERE Id = ', activity('Lookup1').output.firstRow.Id)",
											"type": "Expression"
										}
									}
								],
								"scriptBlockExecutionTimeout": "02:00:00"
							}
						},
						{
							"name": "var_set_run_id",
							"type": "SetVariable",
							"dependsOn": [],
							"policy": {
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"variableName": "run_id",
								"value": {
									"value": "@activity('Lookup1').output.firstRow.Id",
									"type": "Expression"
								}
							}
						}
					]
				}
			}
		],
		"parameters": {
			"MaxNumberOfObjectsReturnedFromLookupActivity": {
				"type": "Int",
				"defaultValue": 5000
			},
			"MaxNumberOfConcurrentTasks": {
				"type": "Int",
				"defaultValue": 20
			},
			"MainControlTableName": {
				"type": "String",
				"defaultValue": "dbo.JobStepMainControlTable"
			}
		},
		"variables": {
			"pipeline_run_id": {
				"type": "String"
			},
			"status": {
				"type": "Integer"
			},
			"run_id": {
				"type": "String"
			}
		},
		"folder": {
			"name": "MetadataDrivenCopyTask_kms_20250519"
		},
		"annotations": [
			"MetadataDrivenSolution"
		]
	}
}